 
name: DepthAI ROS CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - noetic
    tags:
      - 'v*'
  pull_request:
    branches:
      - noetic

jobs:

  style:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Clang-Format lint
      
      uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: '.'
        extensions: 'h,hpp,c,cpp'
        clangFormatVersion: 10
  
  docker-build:
    name: Build and Upload to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        ROS_DISTRO: [noetic]
    env: 
      PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'luxonis/depthai-ros') && startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: env.PUSH == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Get Version
        if: env.PUSH == 'true'
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: Build
        uses: docker/build-push-action@v3
        if: env.PUSH == 'false'
        with:
          build-args: |
            ROS_DISTRO=${{ matrix.ROS_DISTRO }}
            USE_RVIZ=1
          platforms: |
            amd64
            arm64
          no-cache: true

      - name: Build and Push
        uses: docker/build-push-action@v3
        if: env.PUSH == 'true'
        with:
          build-args: |
            ROS_DISTRO=${{ matrix.ROS_DISTRO }}
            USE_RVIZ=1
          platforms: |
            amd64
            arm64
          push: ${{ env.PUSH }}
          no-cache: true
          tags: | 
            luxonis/depthai-ros:${{ steps.vars.outputs.short_ref }}
            luxonis/depthai-ros:${{ matrix.ROS_DISTRO }}-latest
